/* jQuery jqEasyCharCounter plugin
 * Examples and documentation at: http://www.jqeasy.com/
 * Version: 1.0 (05/07/2010)
 * No license. Use it however you want. Just keep this notice included.
 * Requires: jQuery v1.3+
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
 
const defaultOptions = {
  maxChars: 100,
  maxCharsWarning: 80,
  msgFontSize: "12px",
  msgFontColor: "#000000",
  msgFontFamily: "Arial",
  msgTextAlign: "right",
  msgWarningColor: "#F00",
  msgAppendMethod: "insertAfter"
};

function updateCounter(counterEl, charCount, maxChars, maxCharsWarning, msgFontColor, msgWarningColor) {
  const charCountString = `Characters: ${charCount}/${maxChars}`;
  counterEl.html(charCountString);
  counterEl.css({ color: charCount >= maxCharsWarning ? msgWarningColor : msgFontColor });
  counterEl.stop().fadeTo("fast", 1);
}

(function(a) {
  a.fn.extend({
    jqEasyCounter: function(options) {
      const settings = Object.assign({}, defaultOptions, options);

      return this.each(function() {
        const inputEl = a(this);
        const counterEl = a('<div class="jqEasyCounterMsg">&nbsp;</div>');

        const counterStyle = {
          "font-size": settings.msgFontSize,
          "font-family": settings.msgFontFamily,
          color: settings.msgFontColor,
          "text-align": settings.msgTextAlign,
          width: inputEl.width(),
          opacity: 0
        };
        counterEl.css(counterStyle);
        counterEl[settings.msgAppendMethod](inputEl);

        inputEl
          .on("keydown keyup keypress", function() {
            const charCount = inputEl.val().length;
            if (charCount >= settings.maxChars) {
              inputEl.val(inputEl.val().substring(0, settings.maxChars));
            }
            updateCounter(counterEl, charCount, settings.maxChars, settings.maxCharsWarning, settings.msgFontColor, settings.msgWarningColor);
          })
          .on("focus paste", function() {
            setTimeout(function() {
              const charCount = inputEl.val().length;
              updateCounter(counterEl, charCount, settings.maxChars, settings.maxCharsWarning, settings.msgFontColor, settings.msgWarningColor);
            }, 10);
          })
          .on("blur", function() {
            counterEl.stop().fadeTo("fast", 0);
            return false;
          });
      });
       }
  });
})(jQuery);

// Example test cases

describe("jqEasyCounter", function() {
  beforeEach(function() {
    const fixture =
      '<div id="fixture">' +
      '<input id="input" type="text">' +
      "</div>";
    document.body.insertAdjacentHTML("afterbegin", fixture);
  });

  afterEach(function() {
    document.body.removeChild(document.getElementById("fixture"));
  });

  it("should display the correct character count when the input field's value changes", function() {
    const inputEl = document.getElementById("input");
    inputEl.jqEasyCounter();
    inputEl.value = "Hello, world!";
    inputEl.dispatchEvent(new Event("keyup"));
    const counterEl = document.querySelector(".jqEasyCounterMsg");
    expect(counterEl.innerHTML).toBe("Characters: 13/100");
  });

  it("should change the color of the character count display to msgWarningColor when the number of characters exceeds maxCharsWarning", function() {
    const inputEl = document.getElementById("input");
    inputEl.jqEasyCounter({ maxCharsWarning: 5 });
    inputEl.value = "Hello, world!";
    inputEl.dispatchEvent(new Event("keyup"));
    const counterEl = document.querySelector(".jqEasyCounterMsg");
    expect(counterEl.style.color).toBe("rgb(255, 0, 0)");
  });

  it("should truncate the input field's value to maxChars characters when it exceeds this limit", function() {
    const inputEl = document.getElementById("input");
    inputEl.jqEasyCounter({ maxChars: 5 });
    inputEl.value = "Hello, world!";
    inputEl.dispatchEvent(new Event("keyup"));
    expect(inputEl.value).toBe("Hello");
  });

  it("should hide the character count display when the input field loses focus", function() {
    const inputEl = document.getElementById("input");
    inputEl.jqEasyCounter();
    inputEl.dispatchEvent(new Event("blur"));
    const counterEl = document.querySelector(".jqEasyCounterMsg");
    expect(counterEl.style.opacity).toBe("0");
  });
});
